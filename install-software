#!/bin/bash
set -e

function finish {
    echo "Last command ${!!} finished with $?"
    echo "Bye!"
    exit $?
}
trap finish EXIT

##
#  Regular packages
##
echo "Updating apt-get list..."
sudo apt-get update -y 1>/dev/null
echo "Done"

echo "Installing base packages"
sudo apt-get install libssl-dev build-essential \
                     libxslt-dev libxml2-dev \
                     wget curl \
                     -y -qq
echo "Done"


##
#  ZSH
##
if ! hash zsh 2>/dev/null ; then
    echo "Installing zsh"
    sudo apt-get install zsh
    curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh
else
    echo "Skipping zsh... zsh already exists"
fi

##
# Awesome!
##
if ! hash awesome 2>/dev/null ; then
    echo "Installing awesomewm"
    sudo add-apt-repository ppa:klaus-vormweg/awesome -y
    sudo apt-get update -y -qq

    sudo apt-get install awesome awesome-extra -y -qq
    echo "Done"
else
    echo "Skipping awesome, already installed"
fi


##
#  rbenv and ruby-build
##
if ! hash rbenv 2>/dev/null ; then
    echo "Installing rbenv"
    git clone https://github.com/sstephenson/rbenv.git $HOME/.rbenv
    git clone https://github.com/sstephenson/ruby-build.git $HOME/.rbenv/plugins/ruby-build
else
    echo "Skipping rbenv... rbenv already exists"
fi

##
#  The Ultimate Vim Distribution
##
if [ ! -d "$HOME/.spf13-vim-3" ] ; then
    echo "Installing The Ultimate Vim Distribution"
    sudo apt-get install vim -y -qq
    curl http://j.mp/spf13-vim3 -L -o - | sh
fi

##
#  Autojump
##
if ! hash autojump 2>/dev/null ; then
    echo "Installing autojump"
    sudo apt-get install autojump -y -qq
fi

##
#  Go 1.2
##
if ! hash go 2>/dev/null ; then
    version="1.2"
    echo "Installing Google's Go ${version}"

    wget "https://go.googlecode.com/files/go${version}.linux-amd64.tar.gz"
    sudo tar -C /usr/local -xzf "go${version}.linux-amd64.tar.gz"
    rm "go${version}.linux-amd64.tar.gz"

    # Create workspace directories
    mkdir -p "$HOME/go/"{src,pkg,bin}
fi

##
#  Docker
##
if ! hash docker 2>/dev/null ; then
    echo "Install docker"

    # Enable AUFS filesystem support
    sudo apt-get install linux-image-extra-`uname -r` -y -qq
    sudo sh -c "curl https://get.docker.io/gpg | apt-key add -"
    sudo sh -c "echo deb http://get.docker.io/ubuntu docker main > /etc/apt/sources.list.d/docker.list"
    sudo apt-get update -y -qq
    sudo apt-get install lxc-docker -y -qq
fi

##
#  git
##
if ! hash git 2>/dev/null ; then
    echo "Installing git"
    sudo apt-get install git -y
fi


##
#  Bazaar
##
if ! hash bzr 2>/dev/null ; then
    echo "Installing bzr"
    sudo apt-get install bzr -y
fi


##
#  Mercurial (hg)
##
if ! hash hg 2>/dev/null ; then
    echo "Installing mercurial"
    sudo apt-get install mercurial -y
fi

##
#  tig
##
if ! hash tig 2>/dev/null ; then
    echo "Installing tig"
    sudo apt-get install tig -y
fi

##
#  Sublime Text 3
##
if ! hash subl 2>/dev/null ; then
    echo "Installing Sublime Text"
    sudo add-apt-repository ppa:webupd8team/sublime-text-3
    sudo apt-get update
    sudo apt-get install sublime-text-installer
fi

##
#  Python tools
##
if ! hash pip 2>/dev/null ; then
    echo "Installing python tools"
    sudo apt-get install python-setuptools -y
    sudo easy_install pip
fi

##
# Unclutter
# Hides the mouse when typing and idling
##
if ! hash unclutter 2>/dev/null ; then
    echo "Installing unclutter"
    sudo apt-get install unclutter -y
fi


##
# Terminator, the terminal I prefer
##
if ! hash terminator 2>/dev/null ; then
    echo "Installing terminator"
    sudo apt-get install terminator -y -qq
    echo "Done"
fi

##
# zsh
##
if ! hash zsh 2>/dev/null ; then
    echo "Installing zsh"
    sudo apt-get install zsh
    sudo chsh -s /usr/bin/zsh
fi

##
# oh-my-zsh
##
if [ ! -d "$HOME/.oh-my-zsh" ] ; then
    echo "Install oh-my-zsh"
    git clone https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh
fi

##
#  Synapse
#  quick launch tool
##
if ! hash synapse 2>/dev/null ; then
    echo "Installing synapse"
    sudo apt-get install synapse -y -qq
    echo "Done"
fi

if ! hash google-chrome 2>/dev/null ; then
    echo "Installing chrome"
    wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    sudo dpkg -i google-chrome-stable_current_amd64.deb
    rm google-chrome-stable_current_amd64.deb
fi

sudo apt-get autoremove -y -qq
