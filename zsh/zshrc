export LANG="en_US.UTF-8"
export LC_ALL="POSIX"
export DOTFILES=$HOME/dotfiles

if [ "$ZSH_PROFILING" = 1 ];
then
  zmodload zsh/zprof
fi

if [[ -d /opt/homebrew/ ]];
then
  eval "$(/opt/homebrew/bin/brew shellenv)"
fi

export HISTFILE=$HOME/.zsh_history
export HISTSIZE=10000000
export SAVEHIST=10000000

setopt BANG_HIST                   # Treat the '!' character specially during expansion.
setopt EXTENDED_HISTORY            # Write the history file in the ":start:elapsed;command" format.
setopt INC_APPEND_HISTORY          # Write to the history file immediately, not when the shell exits.
setopt SHARE_HISTORY               # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST      # Expire duplicate entries first when trimming history.
setopt HIST_IGNORE_DUPS            # Don't record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS        # Delete old recorded entry if new entry is a duplicate.
setopt HIST_FIND_NO_DUPS           # Do not display a line previously found.
setopt HIST_IGNORE_SPACE           # Don't record an entry starting with a space.
setopt HIST_SAVE_NO_DUPS           # Don't write duplicate entries in the history file.
setopt HIST_REDUCE_BLANKS          # Remove superfluous blanks before recording entry.
setopt HIST_VERIFY                 # Don't execute immediately upon history expansion.
setopt HIST_BEEP                   # Beep when accessing nonexistent history.
setopt MENU_COMPLETE               # select first menu option automatically
setopt NO_NOMATCH                  # stop zsh from catching ^ chars.
setopt INTERACTIVE_COMMENTS        # allow comments in interactive shells

zstyle ":completion:*" menu select # Higlight item in completion menu

### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit
### End of Zinit's installer chunk
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

source $DOTFILES/init.zsh
for file in $DOTFILES/**/preinit.zsh; do 
  [ -f $file ] && source $file
done

os="${$(uname):l}"
for file in $DOTFILES/**/preinit.$os.zsh; do 
  [ -f $file ] && source $file
done

for file in $DOTFILES/**/init.zsh; do 
  [ -f $file ] && source $file
done

os="${$(uname):l}"
for file in $DOTFILES/**/init.$os.zsh; do 
  [ -f $file ] && source $file
done

for file in $DOTFILES/**/postinit.zsh; do 
  [ -f $file ] && source $file
done

os="${$(uname):l}"
for file in $DOTFILES/**/postinit.$os.zsh; do 
  [ -f $file ] && source $file
done



for file in $DOTFILES/**/aliases.zsh; do 
  [ -f $file ] && source $file
done

for file in $DOTFILES/**/aliases.$os.zsh; do 
  [ -f $file ] && source $file
done

# Cycle through history based on characters already typed on the line
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" history-beginning-search-backward
bindkey "^[[B" history-beginning-search-forward

# Enter command mode with jj
bindkey 'jj' vi-cmd-mode

# Exit terminal with qq
bindkey 'qq' exit

exit_zsh() { exit }
zle -N exit_zsh
bindkey 'qq' exit_zsh

zinit wait"0" lucid light-mode for \
  atload"_zsh_autosuggest_start" \
    zsh-users/zsh-autosuggestions \
  blockf atpull'zinit creinstall -q .' \
    atinit"zicompinit; zicdreplay;" \
    Aloxaf/fzf-tab

for plug in "extract"; do
  zinit snippet OMZ::plugins/$plug/$plug.plugin.zsh
done

if [ "$ZSH_PROFILING" = 1 ];
then
  zprof
fi
