# Expand/contract a window by moving one of its side outward/inward
super + r : {h,j,k,l}
  STEP=20; SELECTION={1,2,3,4}; \
  bspc node -z $(echo "left -$STEP 0,bottom 0 $STEP,top 0 -$STEP,right $STEP 0" | cut -d',' -f$SELECTION) || \
  bspc node -z $(echo "right -$STEP 0,top 0 $STEP,bottom 0 -$STEP,left $STEP 0" | cut -d',' -f$SELECTION)

#
#
#
############################################################################
#
# wm independent hotkeys
#

# terminal emulator
super + Return
	alacritty

# Rotate the windows 90 degrees in any direction
#super + shift + {comma,period}
# bspc node @/ -R {90,270}


# focus to previous/next (occupied) desktop
super + {shift + comma, comma, shift + period, period}
  bspc desktop -f {'prev', 'prev.occupied', 'next', 'next.occupied'}


# program launcher
super + space
  rofi -modi drun -show drun -m primary

# cheatsheet
super + shift + @space
  $DOTFILES_HOME/bspwm/script/cheatsheet

# make sxhkd and polybar reload its configuration files
super + Escape
	pkill -USR1 -x sxhkd; \
  $DOTFILES/polybar/launch

#
# bspwm hotkeys
#

# quit/restart bspwm
super + alt + {q,r}
	bspc {quit,wm -r}

# close and kill
super + {_,shift + }w
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# swap the current node and the biggest node
super + g
	bspc node -s biggest.local

# adjust gap size
super + {minus,plus}
	bspc config -d focused window_gap $((`bspc config -d focused window_gap` {-,+} 2 ))

# Focused desktop window gap
super + button{4,5}
	bspc config -d focused window_gap $((`bspc config -d focused window_gap` {-,+} 2 ))

# balance windows
super + e
  $DOTFILES_HOME/bspwm/script/balance

#
# state/flags
#

# set the window state (tiled,pseudo tiled,floating,fullscreen)
super + {t,shift + t,shift f,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags (marked,locked,sticky,private)
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
#super + {p,b,comma,period}
#	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# move node to last desktop
super + shift + Tab
	bspc node --to-desktop last --follow

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}' --follow

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

# send node to preselection
super + p
  bspc node -n last.\!automatic -t tiled

# send the newest marked node to the newest preselected node
super + {shift + y, y}
	bspc node {newest.marked.local -n newest.!automatic.local,-n last.\!automatic}

#
# move/resize
#

# expand window size by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract window size by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# focus mode: float, resize and center
super + shift + f
#bspc rule -a \* --one-shot state=floating rectangle=920x80+50+40; \
  bspc node -t floating

# sticky mode: window on top of all desktops
super + shift + s
  bspc node -t floating
	bspc node -g sticky

#
# tools / apps
#

# open emoji menu
super + semicolon
  rofimoji --rofi-args="-width 850" -s light 

# open rofi calculator
super + u
 rofi -modi calc -show calc

#
# receptacle
#
# insert receptacle, or clear receptacles on current desktop
#super + {_,shift} + r
#  insert={true,false}; \
#  $insert && bspc node -i || \
#  for win in `bspc query -N -n .leaf.!window`; do bspc node $win -k ; done;
#

# Snipping screenshot to clipboard
super + s
  maim --hidecursor -s | xclip -selection clipboard -t image/png
#
# Snipping screenshot to file
super + alt + s
  maim --hidecursor -s ~/Pictures/screenshot-$(date +%s).png

#
# Cheetsheets
#
super + z
  kill -9 $(cat "/tmp/keebsheet.pid") || \
  (bspc rule -a \* -o state=floating layer=above && \
  feh $DOTFILES/qmk/keyboard-layout.png &; \
  echo "$!" > /tmp/keebsheet.pid)

# launch: powermenu
super + shift + q
  powermenu

# launch: qutebrowser-profile
super + q
  qutebrowser-profile
